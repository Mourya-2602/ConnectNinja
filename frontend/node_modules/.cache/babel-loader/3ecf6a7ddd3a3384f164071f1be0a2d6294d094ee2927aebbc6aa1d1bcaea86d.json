{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PALLA\\\\OneDrive\\\\Desktop\\\\ConnectNinja\\\\frontend\\\\src\\\\components\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle registration logic here\n    alert(`Register with: ${email}, ${password}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      maxWidth: 400,\n      marginTop: 80\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 text-center\",\n      children: \"Let's get your account set up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"mail\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Create a Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"w-100 mb-3\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Log in instead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","Container","Form","Button","jsxDEV","_jsxDEV","RegisterPage","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","alert","style","maxWidth","marginTop","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","Label","Control","type","placeholder","value","onChange","target","required","variant","href","_c","$RefreshReg$"],"sources":["C:/Users/PALLA/OneDrive/Desktop/ConnectNinja/frontend/src/components/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\n\r\nconst RegisterPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle registration logic here\r\n    alert(`Register with: ${email}, ${password}`);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ maxWidth: 400, marginTop: 80 }}>\r\n      <h2 className=\"mb-4 text-center\">Let's get your account set up</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"mail\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-4\">\r\n          <Form.Label>Create a Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\" className=\"w-100 mb-3\">Sign Up</Button>\r\n        <div className=\"text-center\">\r\n          Already have an account? <a href=\"/login\">Log in instead</a>\r\n        </div>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}